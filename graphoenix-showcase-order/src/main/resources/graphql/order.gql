type Order {
    id: ID @dataType(type: "Int" autoIncrement: true)
    number: String!
    buyerId: String
    buyer: User @fetch(from: "buyerId" to:"id" anchor: true protocol: GRPC)
    goods: [Good!] @map(from: "id" to: "orderId")
    roles: [Role!] @fetch(from: "buyerId" with: {type: "UserRole" from: "userId" to: "roleId"} to: "id" protocol: GRPC)
}

type Good {
    id: ID @dataType(type: "Int" autoIncrement: true)
    quantity: Int!
    orderId: Int!
    order: Order! @map(from: "orderId" to: "id" anchor: true)
    productId: Int!
    product: Product! @map(from: "productId" to: "id" anchor: true)
    merchantId: Int!
    merchant: Merchant! @map(from: "merchantId" to: "id" anchor: true)
}

type Product {
    id: ID @dataType(type: "Int" autoIncrement: true)
    name: String!
    price: Float!
}

type Merchant {
    id: ID @dataType(type: "Int" autoIncrement: true)
    name: String!
    organizationId: Int
    organization: Organization @fetch(from: "organizationId" to: "id" anchor: true protocol: GRPC)
    customerServices: [User!] @fetch(from: "organizationId" to: "organizationId" protocol: GRPC)
    partners: [Organization!] @fetch(from: "id" with: {type: "MerchantPartners" from: "merchantId" to: "organizationId"} to: "id" anchor: true protocol: GRPC)
    director: User! @fetch(from: "id" with: {type: "MerchantDirector" from: "merchantId" to: "userId"} to: "id" anchor: true protocol: GRPC)
}