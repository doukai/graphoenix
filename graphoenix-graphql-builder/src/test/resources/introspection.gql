type __Schema {
    id: ID @column(autoIncrement: true)
    queryTypeId: Int
    mutationTypeId: Int
    subscriptionTypeId: Int
    types: [__Type!]! @map(from: "id", to: "schemaId")
    queryType: __Type! @map(from: "queryTypeId", to: "id")
    mutationType: __Type @map(from: "mutationTypeId", to: "id")
    subscriptionType: __Type @map(from: "subscriptionTypeId", to: "id")
    directives: [__Directive!]! @map(from: "id", to: "schemaId")
}

type __Type {
    id: ID @column(autoIncrement: true)
    name: String
    schemaId: Int
    fieldId: Int
    inputValueId: Int
    kind: __TypeKind!
    description: String

    # OBJECT and INTERFACE only
    fields(includeDeprecated: Boolean = false): [__Field!] @map(from: "id", to: "typeId")

    # OBJECT only
    #    interfaces: [__Type!]

    # INTERFACE and UNION only
    #    possibleTypes: [__Type!]

    # ENUM only
    enumValues(includeDeprecated: Boolean = false): [__EnumValue!] @map(from: "id", to: "typeId")

    # INPUT_OBJECT only
    inputFields: [__InputValue!] @map(from: "id", to: "typeId")

    # NON_NULL and LIST only
    ofTypeId: Int
    ofType: __Type @map(from: "ofTypeId", to: "id")
}

type __Field {
    id: ID @column(autoIncrement: true)
    name: String
    typeId: Int
    description: String
    args: [__InputValue!]! @map(from: "id", to: "fieldId")
    fieldTypeName: String
    type: __Type! @map(from: "id", to: "fieldId")
    isDeprecated: Boolean!
    deprecationReason: String
}

type __InputValue {
    id: ID @column(autoIncrement: true)
    name: String
    typeId: Int
    fieldId: Int
    directiveId: Int
    description: String
    type: __Type! @map(from: "id", to: "inputValueId")
    defaultValue: String
}

type __EnumValue {
    id: ID @column(autoIncrement: true)
    name: String
    typeId: Int
    description: String
    isDeprecated: Boolean!
    deprecationReason: String
}

enum __TypeKind {
    SCALAR
    OBJECT
    INTERFACE
    UNION
    ENUM
    INPUT_OBJECT
    LIST
    NON_NULL
}

type __Directive {
    id: ID @column(autoIncrement: true)
    name: String
    schemaId: Int
    description: String
    graphQLLocations: [__DirectiveLocation!]!
    args: [__InputValue!]! @map(from: "id", to: "directiveId")
}

enum __DirectiveLocation {
    QUERY
    MUTATION
    SUBSCRIPTION
    FIELD
    FRAGMENT_DEFINITION
    FRAGMENT_SPREAD
    INLINE_FRAGMENT
    SCHEMA
    SCALAR
    OBJECT
    FIELD_DEFINITION
    ARGUMENT_DEFINITION
    INTERFACE
    UNION
    ENUM
    ENUM_VALUE
    INPUT_OBJECT
    INPUT_FIELD_DEFINITION
}