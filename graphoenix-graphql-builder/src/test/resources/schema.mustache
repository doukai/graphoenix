schema {
    query: QueryType
    mutation: MutationType
}

type QueryType {
{{#objects}}
    get{{name}}(id: ID!): {{name}}
    query{{name}}({{#fields}}{{name}}:{{typeName}}Expression{{^isLast}},{{/isLast}}{{/fields}}): [{{name}}]
{{/objects}}
}

type MutationType {
{{#objects}}
    save{{name}}({{#fields}}{{name}}:{{typeName}}{{#isObject}}Input{{/isObject}}{{^isLast}},{{/isLast}}{{/fields}}): {{name}}
{{/objects}}
}

enum Operator {
    EQ
    NEQ
    LK
    NLK
    GT
    NLTE
    GTE
    NLT
    LT
    NGTE
    LTE
    NGT
    NIL
    NNIL
}

enum Conditional {
    AND
    OR
}

input StringExpression {
    opr:Operator = EQ
    val:String
    in:[String]
}

input IntExpression {
    opr:Operator = EQ
    val:Int
    in:[Int]
}

input FloatExpression {
    opr:Operator = EQ
    val:Float
    in:[Float]
}

directive @table(
    engine : String="InnoDB"
) on OBJECT

directive @column(
    default: String
    autoIncrement: Boolean
) on FIELD_DEFINITION

directive @dataType(
    type: String
    length: Int
    decimals: Int
) on FIELD_DEFINITION
