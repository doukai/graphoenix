buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'io.graphoenix:graphoenix-gradle-plugin:0.0.1-SNAPSHOT'
    }
}

plugins {
    id 'java'
}

compileJava.options.sourcepath = files('src/main/resources')

apply plugin: 'io.graphoenix'
graphql {
    graphQLFileName = "auth.gql"
    packageName = "io.graphoenix.showcase.mysql"
    inputLayers = 3
    outputPath = "D:/Work"
}

group 'io.graphoenix'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile project(":graphoenix-mysql")

    implementation project(":graphoenix-core")
    implementation project(":graphoenix-http-server")

    annotationProcessor project(":graphoenix-annotation-processor")
    annotationProcessor project(":graphoenix-inject")
    annotationProcessor project(":graphoenix-interceptor")
    annotationProcessor project(":graphoenix-config")
    annotationProcessor project(":graphoenix-http-server")
    annotationProcessor project(":graphoenix-mysql")

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}