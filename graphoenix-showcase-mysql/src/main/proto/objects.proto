syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.graphoenix.showcase.mysql.grpc";

package io.graphoenix.showcase.mysql.grpc;

import "enums.proto";

message PageInfo {
    bool has_next_page = 1;
    bool has_previous_page = 2;
    string start_cursor = 3;
    string end_cursor = 4;
}
message IntroSchema {
    optional string id = 1;
    optional string query_type_name = 2;
    optional string mutation_type_name = 3;
    optional string subscription_type_name = 4;
    repeated IntroType types = 5;
    IntroType query_type = 6;
    optional IntroType mutation_type = 7;
    optional IntroType subscription_type = 8;
    repeated IntroDirective directives = 9;
}
message IntroType {
    string name = 1;
    optional int32 schema_id = 2;
    IntroTypeKind kind = 3;
    optional string description = 4;
    repeated IntroField fields = 5;
    repeated IntroType interfaces = 6;
    repeated IntroType possible_types = 7;
    repeated IntroEnumValue enum_values = 8;
    repeated IntroInputValue input_fields = 9;
    optional string of_type_name = 10;
    optional IntroType of_type = 11;
}
message IntroTypeInterfaces {
    optional string id = 1;
    string type_name = 2;
    string interface_name = 3;
}
message IntroTypePossibleTypes {
    optional string id = 1;
    string type_name = 2;
    string possible_type_name = 3;
}
message IntroField {
    optional string id = 1;
    optional string name = 2;
    optional string type_name = 3;
    optional string of_type_name = 4;
    optional IntroType of_type = 5;
    optional string description = 6;
    repeated IntroInputValue args = 7;
    IntroType type = 8;
    optional string deprecation_reason = 9;
    optional string from = 10;
    optional string to = 11;
    optional string with_type = 12;
    optional string with_from = 13;
    optional string with_to = 14;
}
message IntroInputValue {
    optional string id = 1;
    optional string name = 2;
    optional string type_name = 3;
    optional string of_type_name = 4;
    optional IntroType of_type = 5;
    optional int32 field_id = 6;
    optional string directive_name = 7;
    optional string description = 8;
    IntroType type = 9;
    optional string default_value = 10;
}
message IntroEnumValue {
    optional string id = 1;
    optional string name = 2;
    optional string of_type_name = 3;
    optional IntroType of_type = 4;
    optional string description = 5;
    optional string deprecation_reason = 6;
}
message IntroDirective {
    optional string name = 1;
    optional int32 schema_id = 2;
    optional string description = 3;
    repeated IntroDirectiveLocation locations = 4;
    repeated IntroInputValue args = 5;
    optional bool on_operation = 6;
    optional bool on_fragment = 7;
    optional bool on_field = 8;
}
message IntroDirectiveLocations {
    optional string id = 1;
    string directive_name = 2;
    IntroDirectiveLocation directive_location = 3;
}
message User {
    optional string id = 1;
    string login = 2;
    string password = 3;
    string name = 4;
    optional int32 age = 5;
    optional bool disable = 6;
    optional Sex sex = 7;
    optional UserProfile user_profile = 8;
    optional int32 organization_id = 9;
    optional Organization organization = 10;
    repeated Role roles = 11;
    repeated string phones = 12;
    repeated int32 test1 = 13;
    repeated bool test2 = 14;
    optional string user_detail2 = 15;
}
message UserProfile {
    optional string id = 1;
    optional string user_id = 2;
    optional string email = 3;
    optional string address = 4;
    optional string qq = 5;
    optional User user = 6;
}
message UserPhones {
    optional string id = 1;
    optional int32 user_id = 2;
    optional string phone = 3;
}
message UserTest1 {
    optional string id = 1;
    optional int32 user_id = 2;
    optional int32 test1 = 3;
}
message UserTest2 {
    optional string id = 1;
    optional int32 user_id = 2;
    optional bool test2 = 3;
}
message UserRole {
    optional string id = 1;
    optional int32 user_id = 2;
    optional int32 role_id = 3;
}
message Role {
    optional string id = 1;
    string name = 2;
    repeated RoleType type = 3;
    repeated User users = 4;
}
message RoleRoleType {
    optional string id = 1;
    optional int32 role_id = 2;
    optional RoleType type = 3;
}
message Organization {
    optional string id = 1;
    optional int32 above_id = 2;
    optional Organization above = 3;
    repeated User users = 4;
    string name = 5;
    repeated int32 org_level3 = 6;
    repeated bool role_disable = 7;
    repeated User user_by_org = 8;
    optional Organization parent = 9;
    optional ContainerType container_type = 10;
}
message ContainerType {
}
message QueryType {
    optional string user_detail = 1;
    repeated string user_detail6 = 2;
    optional int32 org_level = 3;
    repeated bool role_disable2 = 4;
    repeated int32 org_level5 = 5;
    repeated User user_by_org2 = 6;
    optional Organization parent2 = 7;
    repeated Role find_role2 = 8;
    optional ContainerType find_container_type = 9;
}