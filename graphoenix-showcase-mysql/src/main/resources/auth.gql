type User @table(engine:"InnoDB") {
    id: ID @column(autoIncrement:true)
    login: String!
    password: String!
    name: String!
    age: Int
    disable: Boolean
    sex: Sex
    organizationId: Int
    organization: Organization @map(from: "organizationId", to: "id")
    roles: [Role!] @map(from: "id", with:{type: "UserRole", from: "userId", to: "roleId"}, to: "id")
    phones: [String] @map(from: "id", with:{type: "UserPhones", from: "userId", to: "phone"})
}

type UserPhones @table(engine:"InnoDB") {
    id: ID @column(autoIncrement:true)
    userId: Int
    phone: String
}

enum Sex {
    MAN
    FEMALE
}

type UserRole @table(engine:"InnoDB") {
    id: ID @column(autoIncrement:true)
    userId: Int
    roleId: Int
}

type Role @table(engine:"InnoDB") {
    id: ID @column(autoIncrement:true)
    name: String!
    users: [User!] @map(from: "id", with:{type: "UserRole", from: "roleId", to: "userId"}, to: "id")
}

type Organization @table(engine:"InnoDB") {
    id: ID @column(autoIncrement:true)
    aboveId: Int
    above: Organization @map(from: "aboveId", to: "id")
    users: [User!] @map(from: "id", to: "organizationId")
    name: String!
}
