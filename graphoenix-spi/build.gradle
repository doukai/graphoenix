plugins {
    id 'java'
    id 'antlr'
}

group 'io.graphoenix'
version '1.0-SNAPSHOT'

apply plugin: 'maven'

repositories {
    mavenCentral()
}

dependencies {
    antlr "org.antlr:antlr4:4.9.2"
    compile 'org.reactivestreams:reactive-streams:1.0.3'
    compile 'io.r2dbc:r2dbc-spi:0.8.5.RELEASE'
    compile 'com.google.dagger:dagger-compiler:2.40.5'
    compile 'org.eclipse.microprofile.graphql:microprofile-graphql-api:1.0.3'
    compile 'org.eclipse.microprofile.config:microprofile-config-api:3.0'
    compile 'jakarta.annotation:jakarta.annotation-api:2.0.0'
    compile 'jakarta.persistence:jakarta.persistence-api:3.0.0' 
    compile 'javax.inject:javax.inject:1'
    compile 'javax.validation:validation-api:2.0.1.Final'
    compile 'org.javatuples:javatuples:1.2'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

generateGrammarSource {
    includes = ['Graphql.g4']
    maxHeapSize = "64m"
    arguments += ["-visitor"]
//    outputDirectory = file("${project.buildDir}/generated-src/antlr/main/graphql/parser/antlr")
    outputDirectory = file('src/main/java/graphql/parser/antlr')
}
generateGrammarSource.inputs.dir('src/main/antlr')
