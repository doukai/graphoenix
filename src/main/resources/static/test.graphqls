schema {
    query: QueryType
}

type QueryType {
    user(id: ID!): User
    users(ex:UserExpression): [User]
    role(id : ID!) : Role
    resource(id: ID!): Resource
}

query HeroNameAndFriends {
    users(ex:{cond: OR, exs: [{name: {opr: EQ,string: "test"}},{name: {in: ["test3","test4"]}}]}) {
        id, name,sex,login,role{name,type}
    }
    role(id: 1){
        name,type,users{name,id}
    }
}

enum RoleType {
    ADMIN
    USER
    ANONYMOUS
}

enum Sex {
    MAN
    FEMALE
}

enum Operator {
    EQ
    LK
    SW
    EW
    GT
    GTE
    LT
    LTE
    NIL
}

enum Conditional {
    AND
    OR
}

input UserExpression {
    cond:Conditional = AND
    exs:[UserExpression]
    id: IDExpression
    name: StringExpression
    sex: SexExpression
    age:IntExpression
    role:RoleExpression
}

input RoleExpression {
    cond:Conditional = AND
    exs:[RoleExpression]
    id: IDExpression
    name: StringExpression
    type: RoleTypeExpression
}

input IDExpression {
    not:Boolean
    opr:Operator
    id:ID
    in:[ID]
}

input StringExpression {
    not:Boolean
    opr:Operator
    string:String
    in:[String]
}

input IntExpression {
    not:Boolean
    opr:Operator
    int:Int
    in:[Int]
}

input SexExpression {
    not:Boolean
    opr:Operator
    sex:Sex
    in:[Sex]
}

input RoleTypeExpression {
    not:Boolean
    opr:Operator
    roleType:RoleType
    in:[RoleType]
}

input FloatExpression {
    conditional:Conditional
    expressions:[FloatExpression]
    not:Boolean
    operator:Operator
    float:Float
    in:[Float]
}

directive @table(
    engine : String="InnoDB"
) on OBJECT

directive @column(
    default: String
) on FIELD_DEFINITION

directive @dataType(
    type: String
    length: Int
    decimals: Int
) on FIELD_DEFINITION
"""
A main title for the post
asdfas
"""
type User @table(engine:"InnoDB"){
    "test"
    id: ID!
    login  : String! @column(default:"111") @dataType(length:10,decimals:2)
    password: String!
    name: String!
    age: Int
    sex: [Sex]
    role: Role
}

type Role {
    id: ID!
    name: String!
    users: [User]
    resources: [Resource]
    type: [RoleType]
}

type Resource {
    id: ID!
    name: String!
    roles: [Role]
}

type Organization {
    id: ID!
    above: Organization
    name: String!
    users: [User]
}
